import streamlit as st
import requests
import json
import time

# Page settings
st.set_page_config(page_title="Text 2 Img by PS333", page_icon="🧠", layout="centered")

# Display header image with hyperlink
st.markdown(
    '[![Image](https://i.ibb.co/hJVMdhNV/Photo-Fixer-Bot-aifaceswap-dac4ce0cdd00acf259c01808d4253130.jpg)](https://ibb.co/tTDh2k6D)',
    unsafe_allow_html=True
)

st.title("🔥 PS333 Image Generator 🔥")

# Prompt & style input
prompt = st.text_input("Enter your prompt", placeholder="E.g. A cyberpunk city at night")
style = st.radio("Select Image Style", ["Realistic", "Anime", "Fantasy", "Cyberpunk", "Cartoon", "Photorealistic"])

# Generate button
if st.button("✨ Generate Image"):
    if not prompt.strip():
        st.warning("⚠️ Please enter a valid prompt.")
    else:
        with st.spinner("⏳ Generating your image... please wait"):
            try:
                # Prepare payload
                payload = {
                    "prompt": f"{prompt}, {style} style",
                    "params": {
                        "steps": 30,
                        "cfg_scale": 7.0,
                        "sampler_name": "k_euler"
                    }
                }

                headers = {"Content-Type": "application/json"}
                response = requests.post("https://stablehorde.net/api/v2/generate/async", headers=headers, data=json.dumps(payload))
                job = response.json()

                # Check for job ID
                job_id = job.get("id")
                if not job_id:
                    if "message" in job and "rate" in job["message"].lower():
                        st.error("🚫 Rate limited. Please wait and try again.")
                    else:
                        st.error("❌ Failed to start generation.")
                else:
                    # Polling
                    image_url = None
                    for _ in range(30):
                        status = requests.get(f"https://stablehorde.net/api/v2/generate/status/{job_id}").json()
                        if status.get("done") and status.get("generations"):
                            image_url = status["generations"][0]["img"]
                            break
                        time.sleep(2)

                    if image_url:
                        st.image(image_url, use_container_width=True, caption="🖼️ Generated by **PS333 AI**")
                        st.success("✅ Image generated successfully!")
                        st.markdown(f"🔗 [Open Full Image]({image_url})")
                        st.download_button(
                            label="📥 Download Image",
                            data=requests.get(image_url).content,
                            file_name="ps333_generated_image.png",
                            mime="image/png"
                        )
                    else:
                        st.error("❌ Image generation timed out. Try again later.")

            except Exception as e:
                st.error(f"💥 Error occurred: {e}")

# Footer
st.markdown("---")
st.markdown(
    '🔧 Made with ❤️ by [**PS333**](https://instagram.com/prabhveersingh01) | 🚀 Powered by **PS333 AI Studio**'
                      )
